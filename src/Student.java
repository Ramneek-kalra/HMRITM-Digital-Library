/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import java.awt.*;
import java.awt.image.BufferedImage;
import java.io.*;
import java.util.*;
import java.sql.*;
import java.text.*;
import java.time.LocalDate;
import javax.imageio.*;
import javax.swing.*;
import static javax.swing.JFileChooser.*;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.*;
/**
 *
 * @author Ramneek Kalra
 */
public class Student extends javax.swing.JFrame {

    /**
     * Creates new form Issue
     */
    public Student() {
        initComponents();
    }
File file=null;
    String str_colArow1=null;
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        photo = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        add = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        program = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        fname = new javax.swing.JTextField();
        mobile = new javax.swing.JFormattedTextField();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        address = new javax.swing.JTextArea();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        email = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        dob = new javax.swing.JTextField();
        no = new javax.swing.JFormattedTextField();
        batch = new javax.swing.JTextField();
        add1 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        filter = new javax.swing.JComboBox<>();
        jLabel18 = new javax.swing.JLabel();
        search = new javax.swing.JTextField();
        studentno = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Book Issuing");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(204, 204, 255));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel2.setText("Logout");
        jLabel2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Details Adder"));

        photo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        photo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Man.png"))); // NOI18N
        photo.setToolTipText("Image");

        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton1.setText("Browse");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.setNextFocusableComponent(add);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel4.setText("Enrollment No:");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel5.setText("Name:");

        name.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        add.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        add.setText("Add Details");
        add.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        add.setNextFocusableComponent(no);
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel15.setText("Program:");

        program.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        program.setNextFocusableComponent(jButton1);
        program.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                programFocusGained(evt);
            }
        });
        program.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                programKeyTyped(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel6.setText("Father's Name:");

        fname.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        try {
            mobile.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##########")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        mobile.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        mobile.setNextFocusableComponent(address);

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel8.setText("Mobile No:");

        address.setColumns(20);
        address.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        address.setRows(5);
        address.setTabSize(0);
        address.setWrapStyleWord(true);
        address.setAutoscrolls(false);
        address.setNextFocusableComponent(dob);
        jScrollPane1.setViewportView(address);

        jLabel12.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel12.setText("Date of Birth:");

        jLabel13.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel13.setText("Address:");

        jLabel16.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel16.setText("Email Id:");

        email.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        email.setNextFocusableComponent(batch);
        email.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                emailFocusGained(evt);
            }
        });
        email.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                emailKeyTyped(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel17.setText("Batch:");

        dob.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        dob.setNextFocusableComponent(email);
        dob.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                dobFocusGained(evt);
            }
        });
        dob.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                dobKeyTyped(evt);
            }
        });

        try {
            no.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###########")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        no.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        batch.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        batch.setNextFocusableComponent(program);
        batch.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                batchFocusGained(evt);
            }
        });
        batch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                batchKeyTyped(evt);
            }
        });

        add1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        add1.setText("Display Record");
        add1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        add1.setNextFocusableComponent(no);
        add1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(164, 164, 164)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16)
                            .addComponent(jLabel17)
                            .addComponent(jLabel15))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(batch, javax.swing.GroupLayout.DEFAULT_SIZE, 241, Short.MAX_VALUE)
                            .addComponent(program)
                            .addComponent(email, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(photo, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton1))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel5)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(no))
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel8)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(104, 104, 104)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jScrollPane1)
                                            .addComponent(mobile)
                                            .addComponent(fname)
                                            .addComponent(name)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel12)
                                        .addGap(18, 18, 18)
                                        .addComponent(dob))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(add)
                                .addGap(18, 18, 18)
                                .addComponent(add1)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(no, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(fname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(mobile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11))
                    .addComponent(photo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton1)
                        .addComponent(jLabel13))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(dob, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16)
                    .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(batch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(program, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(add)
                    .addComponent(add1)))
        );

        jButton5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton5.setText("Back to Home");
        jButton5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Logo.png"))); // NOI18N

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Student Details"));

        table.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Enrollment No", "Name", "Father's Name", "Mobile No", "Address", "Date of Birth ", "Email Id", "Batch", "Program"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        table.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(table);

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel7.setText("Student Data:");

        jLabel14.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel14.setText("Filter By:");

        filter.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        filter.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Enrollment No", "Name", "Father's Name", "Mobile No", "Address", "Date of Birth", "Email Id", "Batch", "Program" }));
        filter.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        filter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterActionPerformed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel18.setText("No. of Names Listed:");

        search.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        studentno.setEditable(false);
        studentno.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        jButton4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton4.setText("Modify");
        jButton4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton3.setText("Refresh");
        jButton3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(filter, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel18))
                        .addGap(50, 50, 50)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(studentno, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 171, Short.MAX_VALUE)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 394, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(filter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3)
                    .addComponent(jButton4)
                    .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(studentno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addGap(233, 233, 233)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(231, 231, 231))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addContainerGap())))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jButton5)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel2)
                        .addComponent(jLabel1)))
                .addGap(17, 17, 17)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton5)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        int r=JOptionPane.showConfirmDialog(this, "Are you sure you want to Logout?");
        if(r==1){
            this.setVisible(false);
            this.setVisible(true);
        }
        else if(r==0){
            this.setVisible(false);
            Login_A m=new Login_A();
            JOptionPane.showMessageDialog(this, "You are successfully logged out!!");
            m.setVisible(true);
        }
    }//GEN-LAST:event_jLabel2MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try{
            BufferedImage img=null;
            JFileChooser jf=new JFileChooser();
            jf.setDialogTitle("Select your Image...");
            jf.setFileSelectionMode(FILES_ONLY);
            jf.setMultiSelectionEnabled(false);
            FileNameExtensionFilter filter = new FileNameExtensionFilter("*.Images", "jpg","gif","png");
            jf.addChoosableFileFilter(filter);
            int rr=jf.showOpenDialog(this);
            if(rr==JFileChooser.APPROVE_OPTION){
                file=new File(jf.getSelectedFile().getAbsolutePath());
                img = ImageIO.read(file);
                ImageIcon ii = new ImageIcon(img);
                ImageIcon imageIcon = new ImageIcon(ii.getImage().getScaledInstance(photo.getWidth(),photo.getHeight(), Image.SCALE_FAST));
                photo.setIcon(imageIcon);
            }
            else{
                JOptionPane.showMessageDialog(this, "Sorry No file detected/selected");
            }
        }
        catch(Exception e){
            System.out.println(e);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        try{
            FileInputStream fis=new FileInputStream(file);
            Class.forName("com.mysql.jdbc.Driver").newInstance();
            Connection con=(Connection)
            DriverManager.getConnection("jdbc:mysql://172.16.31.50:3306/library","root","HMRITM");
            PreparedStatement stmt=con.prepareStatement("insert into master_student_record values(?,?,?,?,?,?,?,?,?,?)");
            stmt.setString(1,no.getText());
            stmt.setString(2,name.getText());
            stmt.setString(3,fname.getText());
            stmt.setString(4,mobile.getText());
            stmt.setString(5,address.getText());
            stmt.setString(6,dob.getText());
            stmt.setString(7,email.getText());
            stmt.setString(8,batch.getText());
            stmt.setString(9,program.getText());
            stmt.setBinaryStream(10, fis, (int) file.length());
            int i;
            i=stmt.executeUpdate();
            if(i==0){
                JOptionPane.showMessageDialog(this, "Please Review all details again");
            }
            if(i==1){
                JOptionPane.showMessageDialog(this, "Details Added Successfully");
            }
            else{
                JOptionPane.showMessageDialog(this, "There is a problem in the setup of database. Connect Supervisor");
            }
            con.close();
            no.setText("");
            name.setText("");
            fname.setText("");
            mobile.setText("");
            address.setText("");
            dob.setText("");
            email.setText("");
            batch.setText("");
            program.setText("");
            File f=new File("D:\\Developers Tool\\NetBeansProjects\\Digital Library\\src\\man.png");
            BufferedImage ias=ImageIO.read(f);
            ImageIcon asc=new ImageIcon(ias);
            photo.setIcon(asc);
        }
        catch(Exception e){ JOptionPane.showMessageDialog(this,e+": Please Fill all the details..");}
    }//GEN-LAST:event_addActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        Admin_Main d=new Admin_Main();
        d.setVisible(true);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
            
    }//GEN-LAST:event_formWindowOpened

    private void programFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_programFocusGained
        // TODO add your handling code hee:
        
    }//GEN-LAST:event_programFocusGained

    private void programKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_programKeyTyped
        // TODO add your handling code here:
        
    }//GEN-LAST:event_programKeyTyped

    private void emailFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_emailFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_emailFocusGained

    private void emailKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_emailKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_emailKeyTyped

    private void dobFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dobFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_dobFocusGained

    private void dobKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dobKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_dobKeyTyped

    private void batchFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_batchFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_batchFocusGained

    private void batchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_batchKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_batchKeyTyped

    private void filterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_filterActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        table.getTableHeader().setReorderingAllowed(false);
        String se=search.getText();
        DefaultTableModel model=(DefaultTableModel)table.getModel();
        if(filter.getSelectedIndex()==1){
            int rowCount = model.getRowCount();
            for (int i = rowCount - 1; i >= 0; i--) {
                model.removeRow(i);
            }
            String query="select*from master_student_record where Enrollment_No="+se;
            try{
                Class.forName("com.mysql.jdbc.Driver").newInstance();
                Connection c=(Connection)
                DriverManager.getConnection("jdbc:mysql://172.16.31.50:3306/library","root","HMRITM");
                java.sql.Statement stmt=c.createStatement();
                ResultSet rs=stmt.executeQuery(query);
                while(rs.next()){
                    String nNo=rs.getString("Enrollment_No");
                String nName=rs.getString("Student_Name");
                String nBook=rs.getString("Father_Name");
                String nid=rs.getString("Mobile_No");
                String nrd=rs.getString("Address");
                String nClass=rs.getString("Date_of_birth");
                String nProgram=rs.getString("Email_Id");
                String nSem=rs.getString("Batch");
                String nYear=rs.getString("Program");
                model.addRow(new Object[]{nNo,nName,nBook,nid,nrd,nClass,nProgram,nSem,nYear});
                    for(int i=0;i<table.getColumnCount();i++){
                        DefaultTableColumnModel colModel = (DefaultTableColumnModel) table.getColumnModel();
                        TableColumn col = colModel.getColumn(i);
                        int width = 0;

                        TableCellRenderer renderer = col.getHeaderRenderer();
                        if (renderer == null) {
                            renderer = table.getTableHeader().getDefaultRenderer();
                        }
                        Component comp = renderer.getTableCellRendererComponent(table, col.getHeaderValue(), false,
                            false, 0, 0);
                        width = comp.getPreferredSize().width;
                        col.setPreferredWidth(width+2);
                        int re=model.getRowCount();
                        String noo=String.valueOf(re);
                        studentno.setText(noo);
                    }

                }
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(null,e.getMessage());
            }
        }
        else if(filter.getSelectedIndex()==2){
            int rowCount = model.getRowCount();
            for (int i = rowCount - 1; i >= 0; i--) {
                model.removeRow(i);
            }
            String query="select*from master_student_record where Student_Name like '%"+se+"%';";
            try{
                Class.forName("com.mysql.jdbc.Driver").newInstance();
                Connection c=(Connection)
                DriverManager.getConnection("jdbc:mysql://172.16.31.50:3306/library","root","HMRITM");
                java.sql.Statement stmt=c.createStatement();
                ResultSet rs=stmt.executeQuery(query);
                while(rs.next()){
                    String nNo=rs.getString("Enrollment_No");
                String nName=rs.getString("Student_Name");
                String nBook=rs.getString("Father_Name");
                String nid=rs.getString("Mobile_No");
                String nrd=rs.getString("Address");
                String nClass=rs.getString("Date_of_birth");
                String nProgram=rs.getString("Email_Id");
                String nSem=rs.getString("Batch");
                String nYear=rs.getString("Program");
                model.addRow(new Object[]{nNo,nName,nBook,nid,nrd,nClass,nProgram,nSem,nYear});
                    for(int i=0;i<table.getColumnCount();i++){
                        DefaultTableColumnModel colModel = (DefaultTableColumnModel) table.getColumnModel();
                        TableColumn col = colModel.getColumn(i);
                        int width = 0;

                        TableCellRenderer renderer = col.getHeaderRenderer();
                        if (renderer == null) {
                            renderer = table.getTableHeader().getDefaultRenderer();
                        }
                        Component comp = renderer.getTableCellRendererComponent(table, col.getHeaderValue(), false,
                            false, 0, 0);
                        width = comp.getPreferredSize().width;
                        col.setPreferredWidth(width+2);
                        int re=model.getRowCount();
                        String noo=String.valueOf(re);
                        studentno.setText(noo);
                    }

                }
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(null,e.getMessage());
            }
        }
        else if(filter.getSelectedIndex()==3){
            int rowCount = model.getRowCount();
            for (int i = rowCount - 1; i >= 0; i--) {
                model.removeRow(i);
            }
            String query="select*from master_student_record where Father_Name like '%"+se+"%';";
            try{
                Class.forName("com.mysql.jdbc.Driver").newInstance();
                Connection c=(Connection)
                DriverManager.getConnection("jdbc:mysql://172.16.31.50:3306/library","root","HMRITM");
                java.sql.Statement stmt=c.createStatement();
                ResultSet rs=stmt.executeQuery(query);
                while(rs.next()){
                    String nNo=rs.getString("Enrollment_No");
                String nName=rs.getString("Student_Name");
                String nBook=rs.getString("Father_Name");
                String nid=rs.getString("Mobile_No");
                String nrd=rs.getString("Address");
                String nClass=rs.getString("Date_of_birth");
                String nProgram=rs.getString("Email_Id");
                String nSem=rs.getString("Batch");
                String nYear=rs.getString("Program");
                model.addRow(new Object[]{nNo,nName,nBook,nid,nrd,nClass,nProgram,nSem,nYear});
                    for(int i=0;i<table.getColumnCount();i++){
                        DefaultTableColumnModel colModel = (DefaultTableColumnModel) table.getColumnModel();
                        TableColumn col = colModel.getColumn(i);
                        int width = 0;

                        TableCellRenderer renderer = col.getHeaderRenderer();
                        if (renderer == null) {
                            renderer = table.getTableHeader().getDefaultRenderer();
                        }
                        Component comp = renderer.getTableCellRendererComponent(table, col.getHeaderValue(), false,
                            false, 0, 0);
                        width = comp.getPreferredSize().width;
                        col.setPreferredWidth(width+2);
                        int re=model.getRowCount();
                        String noo=String.valueOf(re);
                        studentno.setText(noo);
                    }

                }
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(null,e.getMessage());
            }
        }
        else if(filter.getSelectedIndex()==4){
            int rowCount = model.getRowCount();
            for (int i = rowCount - 1; i >= 0; i--) {
                model.removeRow(i);
            }
            String query="select*from master_student_record where Mobile_No ="+se;
            try{
                Class.forName("com.mysql.jdbc.Driver").newInstance();
                Connection c=(Connection)
                DriverManager.getConnection("jdbc:mysql://172.16.31.50:3306/library","root","HMRITM");
                java.sql.Statement stmt=c.createStatement();
                ResultSet rs=stmt.executeQuery(query);
                while(rs.next()){
                    String nNo=rs.getString("Enrollment_No");
                String nName=rs.getString("Student_Name");
                String nBook=rs.getString("Father_Name");
                String nid=rs.getString("Mobile_No");
                String nrd=rs.getString("Address");
                String nClass=rs.getString("Date_of_birth");
                String nProgram=rs.getString("Email_Id");
                String nSem=rs.getString("Batch");
                String nYear=rs.getString("Program");
                model.addRow(new Object[]{nNo,nName,nBook,nid,nrd,nClass,nProgram,nSem,nYear});
                    for(int i=0;i<table.getColumnCount();i++){
                        DefaultTableColumnModel colModel = (DefaultTableColumnModel) table.getColumnModel();
                        TableColumn col = colModel.getColumn(i);
                        int width = 0;

                        TableCellRenderer renderer = col.getHeaderRenderer();
                        if (renderer == null) {
                            renderer = table.getTableHeader().getDefaultRenderer();
                        }
                        Component comp = renderer.getTableCellRendererComponent(table, col.getHeaderValue(), false,
                            false, 0, 0);
                        width = comp.getPreferredSize().width;
                        col.setPreferredWidth(width+2);
                        int re=model.getRowCount();
                        String noo=String.valueOf(re);
                        studentno.setText(noo);
                    }

                }
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(null,e.getMessage());
            }
        }

        else if(filter.getSelectedIndex()==5){
            int rowCount = model.getRowCount();
            for (int i = rowCount - 1; i >= 0; i--) {
                model.removeRow(i);
            }
            String query="select*from master_student_record where Address like '%"+se+"%';";
            try{
                Class.forName("com.mysql.jdbc.Driver").newInstance();
                Connection c=(Connection)
                DriverManager.getConnection("jdbc:mysql://172.16.31.50:3306/library","root","HMRITM");
                java.sql.Statement stmt=c.createStatement();
                ResultSet rs=stmt.executeQuery(query);
                while(rs.next()){
                    String nNo=rs.getString("Enrollment_No");
                String nName=rs.getString("Student_Name");
                String nBook=rs.getString("Father_Name");
                String nid=rs.getString("Mobile_No");
                String nrd=rs.getString("Address");
                String nClass=rs.getString("Date_of_birth");
                String nProgram=rs.getString("Email_Id");
                String nSem=rs.getString("Batch");
                String nYear=rs.getString("Program");
                model.addRow(new Object[]{nNo,nName,nBook,nid,nrd,nClass,nProgram,nSem,nYear});
                    for(int i=0;i<table.getColumnCount();i++){
                        DefaultTableColumnModel colModel = (DefaultTableColumnModel) table.getColumnModel();
                        TableColumn col = colModel.getColumn(i);
                        int width = 0;

                        TableCellRenderer renderer = col.getHeaderRenderer();
                        if (renderer == null) {
                            renderer = table.getTableHeader().getDefaultRenderer();
                        }
                        Component comp = renderer.getTableCellRendererComponent(table, col.getHeaderValue(), false,
                            false, 0, 0);
                        width = comp.getPreferredSize().width;
                        col.setPreferredWidth(width+2);
                        int re=model.getRowCount();
                        String noo=String.valueOf(re);
                        studentno.setText(noo);
                    }

                }
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(null,e.getMessage());
            }
        }

        else if(filter.getSelectedIndex()==6){
            int rowCount = model.getRowCount();
            for (int i = rowCount - 1; i >= 0; i--) {
                model.removeRow(i);
            }
            String query="select*from master_student_record where Date_of_birth like '%"+se+"%';";
            try{
                Class.forName("com.mysql.jdbc.Driver").newInstance();
                Connection c=(Connection)
                DriverManager.getConnection("jdbc:mysql://172.16.31.50:3306/library","root","HMRITM");
                java.sql.Statement stmt=c.createStatement();
                ResultSet rs=stmt.executeQuery(query);
                while(rs.next()){
                    String nNo=rs.getString("Enrollment_No");
                String nName=rs.getString("Student_Name");
                String nBook=rs.getString("Father_Name");
                String nid=rs.getString("Mobile_No");
                String nrd=rs.getString("Address");
                String nClass=rs.getString("Date_of_birth");
                String nProgram=rs.getString("Email_Id");
                String nSem=rs.getString("Batch");
                String nYear=rs.getString("Program");
                model.addRow(new Object[]{nNo,nName,nBook,nid,nrd,nClass,nProgram,nSem,nYear});
                    for(int i=0;i<table.getColumnCount();i++){
                        DefaultTableColumnModel colModel = (DefaultTableColumnModel) table.getColumnModel();
                        TableColumn col = colModel.getColumn(i);
                        int width = 0;

                        TableCellRenderer renderer = col.getHeaderRenderer();
                        if (renderer == null) {
                            renderer = table.getTableHeader().getDefaultRenderer();
                        }
                        Component comp = renderer.getTableCellRendererComponent(table, col.getHeaderValue(), false,
                            false, 0, 0);
                        width = comp.getPreferredSize().width;
                        col.setPreferredWidth(width+2);
                        int re=model.getRowCount();
                        String noo=String.valueOf(re);
                        studentno.setText(noo);
                    }

                }
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(null,e.getMessage());
            }
        }
        else if(filter.getSelectedIndex()==7){
            int rowCount = model.getRowCount();
            for (int i = rowCount - 1; i >= 0; i--) {
                model.removeRow(i);
            }
            String query="select*from master_student_record where Email_Id like '%"+se+"%';";
            try{
                Class.forName("com.mysql.jdbc.Driver").newInstance();
                Connection c=(Connection)
                DriverManager.getConnection("jdbc:mysql://172.16.31.50:3306/library","root","HMRITM");
                java.sql.Statement stmt=c.createStatement();
                ResultSet rs=stmt.executeQuery(query);
                while(rs.next()){
                    String nNo=rs.getString("Enrollment_No");
                String nName=rs.getString("Student_Name");
                String nBook=rs.getString("Father_Name");
                String nid=rs.getString("Mobile_No");
                String nrd=rs.getString("Address");
                String nClass=rs.getString("Date_of_birth");
                String nProgram=rs.getString("Email_Id");
                String nSem=rs.getString("Batch");
                String nYear=rs.getString("Program");
                model.addRow(new Object[]{nNo,nName,nBook,nid,nrd,nClass,nProgram,nSem,nYear});
                    for(int i=0;i<table.getColumnCount();i++){
                        DefaultTableColumnModel colModel = (DefaultTableColumnModel) table.getColumnModel();
                        TableColumn col = colModel.getColumn(i);
                        int width = 0;

                        TableCellRenderer renderer = col.getHeaderRenderer();
                        if (renderer == null) {
                            renderer = table.getTableHeader().getDefaultRenderer();
                        }
                        Component comp = renderer.getTableCellRendererComponent(table, col.getHeaderValue(), false,
                            false, 0, 0);
                        width = comp.getPreferredSize().width;
                        col.setPreferredWidth(width+2);
                        int re=model.getRowCount();
                        String noo=String.valueOf(re);
                        studentno.setText(noo);
                    }

                }
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(null,e.getMessage());
            }
        }
        else if(filter.getSelectedIndex()==8){
            int rowCount = model.getRowCount();
            for (int i = rowCount - 1; i >= 0; i--) {
                model.removeRow(i);
            }
            String query="select*from master_student_record where Batch like '%"+se+"%';";
            try{
                Class.forName("com.mysql.jdbc.Driver").newInstance();
                Connection c=(Connection)
                DriverManager.getConnection("jdbc:mysql://172.16.31.50:3306/library","root","HMRITM");
                java.sql.Statement stmt=c.createStatement();
                ResultSet rs=stmt.executeQuery(query);
                while(rs.next()){
                    String nNo=rs.getString("Enrollment_No");
                String nName=rs.getString("Student_Name");
                String nBook=rs.getString("Father_Name");
                String nid=rs.getString("Mobile_No");
                String nrd=rs.getString("Address");
                String nClass=rs.getString("Date_of_birth");
                String nProgram=rs.getString("Email_Id");
                String nSem=rs.getString("Batch");
                String nYear=rs.getString("Program");
                model.addRow(new Object[]{nNo,nName,nBook,nid,nrd,nClass,nProgram,nSem,nYear});
                    for(int i=0;i<table.getColumnCount();i++){
                        DefaultTableColumnModel colModel = (DefaultTableColumnModel) table.getColumnModel();
                        TableColumn col = colModel.getColumn(i);
                        int width = 0;

                        TableCellRenderer renderer = col.getHeaderRenderer();
                        if (renderer == null) {
                            renderer = table.getTableHeader().getDefaultRenderer();
                        }
                        Component comp = renderer.getTableCellRendererComponent(table, col.getHeaderValue(), false,
                            false, 0, 0);
                        width = comp.getPreferredSize().width;
                        col.setPreferredWidth(width+2);
                        int re=model.getRowCount();
                        String noo=String.valueOf(re);
                        studentno.setText(noo);
                    }

                }
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(null,e.getMessage());
            }
        }
        else if(filter.getSelectedIndex()==9){
            int rowCount = model.getRowCount();
            for (int i = rowCount - 1; i >= 0; i--) {
                model.removeRow(i);
            }
            String query="select*from master_student_record where Program like '%"+se+"%';";
            try{
                Class.forName("com.mysql.jdbc.Driver").newInstance();
                Connection c=(Connection)
                DriverManager.getConnection("jdbc:mysql://172.16.31.50:3306/library","root","HMRITM");
                java.sql.Statement stmt=c.createStatement();
                ResultSet rs=stmt.executeQuery(query);
                while(rs.next()){
                    String nNo=rs.getString("Enrollment_No");
                String nName=rs.getString("Student_Name");
                String nBook=rs.getString("Father_Name");
                String nid=rs.getString("Mobile_No");
                String nrd=rs.getString("Address");
                String nClass=rs.getString("Date_of_birth");
                String nProgram=rs.getString("Email_Id");
                String nSem=rs.getString("Batch");
                String nYear=rs.getString("Program");
                model.addRow(new Object[]{nNo,nName,nBook,nid,nrd,nClass,nProgram,nSem,nYear});
                    for(int i=0;i<table.getColumnCount();i++){
                        DefaultTableColumnModel colModel = (DefaultTableColumnModel) table.getColumnModel();
                        TableColumn col = colModel.getColumn(i);
                        int width = 0;

                        TableCellRenderer renderer = col.getHeaderRenderer();
                        if (renderer == null) {
                            renderer = table.getTableHeader().getDefaultRenderer();
                        }
                        Component comp = renderer.getTableCellRendererComponent(table, col.getHeaderValue(), false,
                            false, 0, 0);
                        width = comp.getPreferredSize().width;
                        col.setPreferredWidth(width+2);
                        int re=model.getRowCount();
                        String noo=String.valueOf(re);
                        studentno.setText(noo);
                    }

                }
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(null,e.getMessage());
            }
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        table.getTableHeader().setReorderingAllowed(false);
        DefaultTableModel model=(DefaultTableModel)table.getModel();
        int rowCount = model.getRowCount();
        for (int i = rowCount - 1; i >= 0; i--) {
            model.removeRow(i);
        }
        String query="select*from master_student_record";
        try{
            Class.forName("com.mysql.jdbc.Driver").newInstance();
            Connection c=(Connection)
            DriverManager.getConnection("jdbc:mysql://172.16.31.50:3306/library","root","HMRITM");
            java.sql.Statement stmt=c.createStatement();
            ResultSet rs=stmt.executeQuery(query);
            while(rs.next()){
                String nNo=rs.getString("Enrollment_No");
                String nName=rs.getString("Student_Name");
                String nBook=rs.getString("Father_Name");
                String nid=rs.getString("Mobile_No");
                String nrd=rs.getString("Address");
                String nClass=rs.getString("Date_of_birth");
                String nProgram=rs.getString("Email_Id");
                String nSem=rs.getString("Batch");
                String nYear=rs.getString("Program");
                model.addRow(new Object[]{nNo,nName,nBook,nid,nrd,nClass,nProgram,nSem,nYear});
                for(int i=0;i<table.getColumnCount();i++){
                    DefaultTableColumnModel colModel = (DefaultTableColumnModel) table.getColumnModel();
                    TableColumn col = colModel.getColumn(i);
                    int width = 0;
                    TableCellRenderer renderer = col.getHeaderRenderer();
                    if (renderer == null) {
                        renderer = table.getTableHeader().getDefaultRenderer();
                    }
                    Component comp = renderer.getTableCellRendererComponent(table, col.getHeaderValue(), false,
                        false, 0, 0);
                    width = comp.getPreferredSize().width;
                    col.setPreferredWidth(width+2);
                }
                int re=model.getRowCount();
                String noo=String.valueOf(re);
                studentno.setText(noo);
            }

        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null,e.getMessage());
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void add1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add1ActionPerformed
        String se=no.getText();
        String query="select * from master_student_record where Enrollment_No="+se;
            try{
                Class.forName("com.mysql.jdbc.Driver").newInstance();
                Connection c=(Connection)
                DriverManager.getConnection("jdbc:mysql://172.16.31.50:3306/library","root","HMRITM");
                java.sql.Statement stmt=c.createStatement();
                ResultSet rs=stmt.executeQuery(query);
                while(rs.next()){
                    String nNo=rs.getString("Enrollment_No");
                    String nName=rs.getString("Student_Name");
                    String nBook=rs.getString("Father_Name");
                    String nid=rs.getString("Mobile_No");
                    String nrd=rs.getString("Address");
                    String nClass=rs.getString("Date_of_birth");
                    String nProgram=rs.getString("Email_Id");
                    String nSem=rs.getString("Batch");
                    String nYear=rs.getString("Program");
                    no.setText(nNo);
                    name.setText(nName);
                    fname.setText(nBook);
                    mobile.setText(nid);
                    address.setText(nrd);
                    dob.setText(nClass);
                    email.setText(nProgram);
                    batch.setText(nSem);
                    program.setText(nYear);
                    jButton1.setEnabled(false);
                    name.setEditable(false);
                    fname.setEditable(false);
                    mobile.setEditable(false);
                    address.setEditable(false);
                    dob.setEditable(false);
                    email.setEditable(false);
                    batch.setEditable(false);
                    program.setEditable(false);
                }
                
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(null,e.getMessage());
            }
    }//GEN-LAST:event_add1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Student.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Student.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Student.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Student.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Student().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JButton add1;
    private javax.swing.JTextArea address;
    private javax.swing.JTextField batch;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextField dob;
    private javax.swing.JTextField email;
    private javax.swing.JComboBox<String> filter;
    private javax.swing.JTextField fname;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JFormattedTextField mobile;
    private javax.swing.JTextField name;
    private javax.swing.JFormattedTextField no;
    private javax.swing.JLabel photo;
    private javax.swing.JTextField program;
    private javax.swing.JTextField search;
    private javax.swing.JTextField studentno;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
