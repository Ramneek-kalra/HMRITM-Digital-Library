
import java.awt.Component;
import java.awt.Desktop;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.sql.Blob;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Calendar;
import java.util.List;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Ramneek Kalra
 */
public class Issue extends javax.swing.JFrame {

    /**
     * Creates new form Issue
     */
    public Issue() {
        initComponents();
    }
    String roll=null,as=null;
    String em=null;
    Timestamp ts1;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField3 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        check = new javax.swing.JButton();
        rollno = new javax.swing.JFormattedTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        r = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        jTextField3.setText("jTextField3");

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Issue a Book");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Logo.png"))); // NOI18N

        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton1.setText("Logout");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Issue a Book"));
        jPanel2.setNextFocusableComponent(rollno);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel2.setText("Scan your Enrollment No:");

        check.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        check.setText("Check");
        check.setNextFocusableComponent(r);
        check.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkActionPerformed(evt);
            }
        });

        try {
            rollno.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###########")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        rollno.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        rollno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                rollnoKeyPressed(evt);
            }
        });

        table.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Acc_No"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        table.setNextFocusableComponent(rollno);
        table.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(table);

        r.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        r.setText("Add Book");
        r.setEnabled(false);
        r.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rollno, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(check))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(r)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(check)
                    .addComponent(rollno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(r))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jButton5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton5.setText("Back to Home");
        jButton5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1))
                    .addComponent(jButton5))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int r=JOptionPane.showConfirmDialog(this, "Are you sure you want to Logout?");
        if(r==1){
            this.setVisible(false);
            this.setVisible(true);
        }
        else if(r==0){
            this.setVisible(false);
            Login_A m=new Login_A();
            JOptionPane.showMessageDialog(this, "You are successfully logged out!!");
            m.setVisible(true);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        Admin_Main m=new Admin_Main();
        m.setVisible(true);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void checkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkActionPerformed
            table.getTableHeader().setReorderingAllowed(false);
            DefaultTableModel model=(DefaultTableModel)table.getModel();
            String r1 = null;
            int s=0;
            String[] a=new String[5];
            int count=0;
            roll=rollno.getText();
            String query1="SELECT * from master_student_record where Enrollment_No="+roll;
            String query="SELECT count(Enrollment_No) as C FROM issue_master where Enrollment_No="+roll +"&& Status=0";
                    try{
                            Class.forName("com.mysql.jdbc.Driver").newInstance();
                            Connection con;
                            con = (Connection)
                            DriverManager.getConnection("jdbc:mysql://172.16.31.50:3306/Library","root","HMRITM");
                            java.sql.Statement stmt=con.createStatement();
                            java.sql.Statement stmt12=con.createStatement();
                            ResultSet rs2=stmt12.executeQuery(query1);
                            ResultSet rs=stmt.executeQuery(query);
                            while(rs2.next()){
                                r1=rs2.getString("Enrollment_No");
                                em=rs2.getString("Email_Id");
                                if(r1.equals(roll)==true){
                                    r.setEnabled(true);
                                    while(rs.next()){
                                        count=rs.getInt("C");
                                        if(count==0){
                                            JOptionPane.showMessageDialog(this, "No Record Found, Continue by ADD BOOK");
                                        }
                                        if(count>4){
                                            JOptionPane.showMessageDialog(this, "<html><h2><b>ALERT:</b></h2>\n Books Issued : \n<html><h3><b>"+count+"</b></h3></html>");
                                        }
                                    }
                                    String q="SELECT * from issue_master where Enrollment_No="+roll+" && Status=0";
                                    ResultSet rs1=stmt.executeQuery(q);
                                    while(rs1.next()){
                                            String aa=rs1.getString("Acc_No");
                                            switch(count){
                                                case 0: check.setEnabled(false);
                                                        break;
                                                case 1: for(int i=0;i<count-i;i++){
                                                            a[count]=aa;
                                                            model.addRow(new Object[]{a[count]});
                                                        }
                                                        check.setEnabled(false);
                                                        break;
                                                case 2: for(int i=0;i<count-i;i++){
                                                            a[count]=aa;
                                                            model.addRow(new Object[]{a[count]});}
                                                            check.setEnabled(false);
                                                        break;
                                                case 3: for(int i=1;i<count-i;i++){
                                                            a[count]=aa;
                                                            model.addRow(new Object[]{a[count]});}
                                                            check.setEnabled(false);
                                                        break;        
                                                case 4: for(int i=1;i<count-i;i++){
                                                            a[count]=aa;
                                                            model.addRow(new Object[]{a[count]});}
                                                            check.setEnabled(false);
                                                        break;   
                                            }
                                }}
                                else{
                                    r.setEnabled(false);
                                }
                            }
                    }
                    catch(Exception e){
                            System.out.println(e);
                        }
    }//GEN-LAST:event_checkActionPerformed

    private void rollnoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rollnoKeyPressed
    }//GEN-LAST:event_rollnoKeyPressed

    private void rActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rActionPerformed
        DefaultTableModel model=(DefaultTableModel)table.getModel();
        int cc=model.getRowCount();
        
                                    switch(cc){
                                        case 0: model.addRow(new Object[]{"Issue book1"});
                                                model.addRow(new Object[]{"Issue book2"});
                                                model.addRow(new Object[]{"Issue book3"});
                                                model.addRow(new Object[]{"Issue book4"});
                                                break;
                                        case 1: model.addRow(new Object[]{"Issue book2"});
                                                model.addRow(new Object[]{"Issue book3"});
                                                model.addRow(new Object[]{"Issue book4"});
                                                break;
                                        case 2: model.addRow(new Object[]{"Issue book3"});
                                                model.addRow(new Object[]{"Issue book4"});
                                                break;
                                        case 3: model.addRow(new Object[]{"Issue book4"});
                                                break;
                                        case 4: JOptionPane.showMessageDialog(this, "Sorry, No More Slot");
                                                break;
                                    }
    }//GEN-LAST:event_rActionPerformed

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        DefaultTableModel model=(DefaultTableModel)table.getModel();
        int rr=0;
        String nA,nB,nC=null,nD,nE,nF,nG,nH,nI,nJ,nK,nL,nM,nN,nO,query=null;
        Timestamp ts = new Timestamp(System.currentTimeMillis());
        ts1 = new Timestamp(System.currentTimeMillis());
        Calendar cal = Calendar.getInstance();
        cal.setTime(ts);
        cal.add(Calendar.DAY_OF_WEEK, 14);
        ts1 = new Timestamp(cal.getTime().getTime());
            int row =table.rowAtPoint(evt.getPoint());
            int col = 0;
            String s=table.getValueAt(row, col).toString();
            //IF NO BOOK RECORD FOUND
            if(s=="Issue book1" || s=="Issue book2" || s=="Issue book3" || s=="Issue book4" ){
                as=JOptionPane.showInputDialog(this,"Scan the Acc_No of Book to be Issued..");
                query="select* from master_book_record where Acc_No="+as;
                try{
                    Class.forName("com.mysql.jdbc.Driver").newInstance();
                    Connection c=(Connection)
                    DriverManager.getConnection("jdbc:mysql://172.16.31.50:3306/library","root","HMRITM");
                    java.sql.Statement stmt=c.createStatement();
                    ResultSet rs=stmt.executeQuery(query);
                    while(rs.next()){
                        nA=rs.getString("Acc_No");
                        nB=rs.getString("Author");
                        nC=rs.getString("Title");
                        nD=rs.getString("Edition");
                        nE=rs.getString("Place_Publishers");
                        nF=rs.getString("Year");
                        nG=rs.getString("Pages");
                        nH=rs.getString("Vol");
                        nI=rs.getString("Source");
                        nJ=rs.getString("BillNo_Date");
                        nK=rs.getString("Cost");
                        nL=rs.getString("Class_No");
                        nM=rs.getString("Book_No");
                        nN=rs.getString("Remarks");
                        nO=rs.getString("Subject");
                    }
                        int r=JOptionPane.showConfirmDialog(this, "Do you want to Confirm with Entered Book:\n"+nC);
                        // WHEN USER SAYS NO
                        if(r==1){
                            JOptionPane.showMessageDialog(this, "Okay that's Fine");
                        }
                        //WHEN USER SAYS YES
                        else if(r==0){
                            try{
                            Class.forName("com.mysql.jdbc.Driver").newInstance();
                            Connection con=(Connection)
                            DriverManager.getConnection("jdbc:mysql://172.16.31.50:3306/library","root","HMRITM");
                            PreparedStatement stmt1=con.prepareStatement("insert into issue_master values(?,?,?,?,?,?)");
                            String qr="SELECT Issue_Id FROM issue_master ORDER BY Issue_Id DESC LIMIT 1";
                            String gh="Select count(Acc_No) as cc from issue_master where Status=0 && Acc_No="+as;
                            
                            java.sql.Statement stmt12=c.createStatement();
                            ResultSet rsw1=stmt12.executeQuery(gh);
                            int g=0;
                            
                            while(rsw1.next()){
                                g=rsw1.getInt("cc");}
                                if(g >= 1){
                                    JOptionPane.showMessageDialog(this, "Book is already issued.");
                                    rollno.setText("");
                                    check.setEnabled(true);
                                    model.setRowCount(0);
                                    
                                }
                                else if(g==0){
                            java.sql.Statement stmt2=con.createStatement();
                            ResultSet rsw=stmt2.executeQuery(qr);
                            
                            int o=0;
                            while(rsw.next()){
                            o=rsw.getInt("Issue_Id");}
                            stmt1.setInt(1,o+1);
                            stmt1.setString(2,as);
                            stmt1.setString(3,roll);
                            stmt1.setTimestamp(4,ts);
                            stmt1.setTimestamp(5,ts1);
                            stmt1.setInt(6,0);
                            int i;
                            i=stmt1.executeUpdate();
                            if(i==0){
                                JOptionPane.showMessageDialog(this, "Please Review all details again");
                            }
                            if(i==1){
                                JOptionPane.showMessageDialog(this, "Book:\n"+nC+"\nhas been issued to:\n"+roll);
                                model.setRowCount(0);
                                check.setEnabled(true);
                            }
                            else{
                                JOptionPane.showMessageDialog(this, "There is a problem in the setup of database. Connect Supervisor");
                                check.setEnabled(true);
                            }
                            }
                        }
                        catch(Exception e){ JOptionPane.showMessageDialog(this,"Please Fill all the details..");}
                        }
                    }
                catch(Exception e){
                    System.out.println(e);
                }   
            }
            else if(s!="Issue Book1" || s!="Issue Book2" || s!="Issue Book3" || s!="Issue Book4"){
                JOptionPane.showMessageDialog(this,"");
            }
    }//GEN-LAST:event_tableMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Issue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Issue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Issue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Issue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Issue().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton check;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JButton r;
    private javax.swing.JFormattedTextField rollno;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
